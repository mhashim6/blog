<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Archive on The Upside-Down Trees</title><link>https://blog.mhashim6.me/posts/</link><description>Recent content in Archive on The Upside-Down Trees</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 01 Aug 2021 11:11:11 +0100</lastBuildDate><atom:link href="https://blog.mhashim6.me/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Gossips: An Event-Bus in a Chatty Neighborhood</title><link>https://blog.mhashim6.me/2020/06/19/gossips-an-event-bus-in-a-chatty-neighborhood/</link><pubDate>Fri, 19 Jun 2020 11:11:11 +0100</pubDate><guid>https://blog.mhashim6.me/2020/06/19/gossips-an-event-bus-in-a-chatty-neighborhood/</guid><description>image by balasoiu @ freepik
In this post we&amp;rsquo;ll tackle a common issue: simple communication between system components. With a slightly controversial, themed, domain-driven design.
Let&amp;rsquo;s say our project is an Android app, and we need a functionality that requires two fragments to communicate. You know Android, social distancing between components is the norm out there. We&amp;rsquo;ll use this as an excuse to write an Event Bus.
I chose an analogy for the entire thing: Gossips; It fits with the nature of the library, and the way it&amp;rsquo;ll be usedâ€“A global pub-sub component to enable cross-component communication.</description></item></channel></rss>